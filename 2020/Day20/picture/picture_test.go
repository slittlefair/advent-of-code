package picture

import (
	helpers "Advent-of-Code"
	tile "Advent-of-Code/2020/Day20/tile"
	"reflect"
	"testing"
)

func TestPicture_PopulateTiles(t *testing.T) {
	tests := []struct {
		name  string
		input []string
		want  Picture
	}{
		{
			name: "populates a simple picture from input",
			input: []string{
				"Tile 7:",
				"..",
				"##",
				"",
				"Tile 5:",
				".#",
				"#.",
				"",
				"Tile 11:",
				".#",
				".#",
				"",
				"Tile 3:",
				"..",
				"..",
			},
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID:     "7",
						Height: 1,
						Width:  1,
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: ".",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: "#",
						},
					},
					{
						ID:     "5",
						Height: 1,
						Width:  1,
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: ".",
						},
					},
					{
						ID:     "11",
						Height: 1,
						Width:  1,
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: ".",
							{X: 1, Y: 1}: "#",
						},
					},
					{
						ID:     "3",
						Height: 1,
						Width:  1,
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: ".",
							{X: 0, Y: 1}: ".",
							{X: 1, Y: 1}: ".",
						},
					},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			p := &Picture{}
			p.PopulateTiles(tt.input)
			if !reflect.DeepEqual(*p, tt.want) {
				t.Errorf("got %v, want %v", p, tt.want)
			}
		})
	}
}

func TestPicture_FindMatchesForTile(t *testing.T) {
	tests := []struct {
		name  string
		p     Picture
		t     tile.Tile
		index int
		want  Picture
	}{
		{
			name: "skips tile in picture if its ID matches the given tile ID",
			p: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-1",
					},
				},
			},
			t: tile.Tile{
				ID: "tile-1",
			},
			index: 0,
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-1",
					},
				},
			},
		},
		{
			name: "skips tile in picture if it is already known to be adjacent to the given tile ID",
			p: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
					},
				},
			},
			t: tile.Tile{
				ID: "tile-1",
				AdjacentTiles: tile.AdjacentTiles{
					Top: "tile-2",
				},
			},
			index: 0,
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
					},
				},
			},
		},
		{
			name: "skips tile in picture if it is already adjacent to 4 tiles",
			p: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
					},
				},
			},
			t: tile.Tile{
				ID: "tile-1",
				AdjacentTiles: tile.AdjacentTiles{
					Top:    "tile-3",
					Bottom: "tile-4",
					Left:   "tile-5",
					Right:  "tile-6",
				},
			},
			index: 0,
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
					},
				},
			},
		},
		{
			name: "skips tile in picture if it is already adjacent to 4 tiles",
			p: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
						AdjacentTiles: tile.AdjacentTiles{
							Top:    "tile-3",
							Bottom: "tile-4",
							Left:   "tile-5",
							Right:  "tile-6",
						},
					},
				},
			},
			t: tile.Tile{
				ID: "tile-1",
			},
			index: 0,
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-2",
						AdjacentTiles: tile.AdjacentTiles{
							Top:    "tile-3",
							Bottom: "tile-4",
							Left:   "tile-5",
							Right:  "tile-6",
						},
					},
				},
			},
		},
		{
			name: "does not affect the picture if the given tile is not adjacent to any tile in the picture",
			p: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-1",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: ".",
						},
						Height: 1,
						Width:  1,
					},
					{
						ID: "tile-2",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: ".",
							{X: 0, Y: 1}: ".",
							{X: 1, Y: 1}: ".",
						},
						Height: 1,
						Width:  1,
					},
					{
						ID: "tile-3",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: "#",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: "#",
						},
						Height: 1,
						Width:  1,
					},
				},
			},
			t: tile.Tile{
				ID: "tile-1",
				Pixels: map[helpers.Co]string{
					{X: 0, Y: 0}: ".",
					{X: 1, Y: 0}: "#",
					{X: 0, Y: 1}: "#",
					{X: 1, Y: 1}: ".",
				},
				Height: 1,
				Width:  1,
			},
			index: 0,
			want: Picture{
				Tiles: []tile.Tile{
					{
						ID: "tile-1",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: ".",
						},
						Height: 1,
						Width:  1,
					},
					{
						ID: "tile-2",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: ".",
							{X: 1, Y: 0}: ".",
							{X: 0, Y: 1}: ".",
							{X: 1, Y: 1}: ".",
						},
						Height: 1,
						Width:  1,
					},
					{
						ID: "tile-3",
						Pixels: map[helpers.Co]string{
							{X: 0, Y: 0}: "#",
							{X: 1, Y: 0}: "#",
							{X: 0, Y: 1}: "#",
							{X: 1, Y: 1}: "#",
						},
						Height: 1,
						Width:  1,
					},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			tt.p.FindMatchesForTile(tt.t, tt.index)
			if !reflect.DeepEqual(tt.p, tt.want) {
				t.Errorf("got %+v, want %+v", tt.p, tt.want)
			}
		})
	}

	tests2 := []struct {
		name          string
		tile1Pixels   map[helpers.Co]string
		tile2Pixels   map[helpers.Co]string
		wantPixels    map[helpers.Co]string
		want1Adjacent tile.AdjacentTiles
		want2Adjacent tile.AdjacentTiles
	}{
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: "#",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: "#",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 2, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 2, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 2, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 2, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 1, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "#",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 0, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 0, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 0, flip = 0",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 1, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 1, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: "#",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 1, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: "#",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 1, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 2, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 2, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 2, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 2, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is above tile2, rotate = 3, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: "#",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Bottom: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Top: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is below tile2, rotate = 3, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Top: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Bottom: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the left of tile2, rotate = 3, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "-",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: "-",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: "-",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: ".",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: "#",
				{X: 1, Y: 2}: "#",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Right: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Left: "tile-1",
			},
		},
		{
			name: "successfully edits adajcent tiles when tile1 is to the right of tile2, rotate = 3, flip = 1",
			tile1Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "-",
				{X: 2, Y: 0}: "-",
				{X: 0, Y: 1}: "#",
				{X: 1, Y: 1}: "-",
				{X: 2, Y: 1}: "-",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: "-",
				{X: 2, Y: 2}: "-",
			},
			tile2Pixels: map[helpers.Co]string{
				{X: 0, Y: 0}: "#",
				{X: 1, Y: 0}: "#",
				{X: 2, Y: 0}: ".",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: ".",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			wantPixels: map[helpers.Co]string{
				{X: 0, Y: 0}: ".",
				{X: 1, Y: 0}: ".",
				{X: 2, Y: 0}: "#",
				{X: 0, Y: 1}: ".",
				{X: 1, Y: 1}: ".",
				{X: 2, Y: 1}: "#",
				{X: 0, Y: 2}: ".",
				{X: 1, Y: 2}: ".",
				{X: 2, Y: 2}: ".",
			},
			want1Adjacent: tile.AdjacentTiles{
				Left: "tile-2",
			},
			want2Adjacent: tile.AdjacentTiles{
				Right: "tile-1",
			},
		},
	}
	for _, tt := range tests2 {
		t.Run(tt.name, func(t *testing.T) {
			tile1 := tile.Tile{
				ID:     "tile-1",
				Pixels: tt.tile1Pixels,
				Height: 2,
				Width:  2,
			}
			tile2 := tile.Tile{
				ID:     "tile-2",
				Pixels: tt.tile2Pixels,
				Height: 2,
				Width:  2,
			}
			p := Picture{
				Tiles: []tile.Tile{tile1, tile2},
			}
			want := Picture{
				Tiles: []tile.Tile{
					{
						ID:            tile1.ID,
						Pixels:        tile1.Pixels,
						Height:        tile1.Height,
						Width:         tile1.Width,
						AdjacentTiles: tt.want1Adjacent,
					},
					{
						ID:            tile2.ID,
						Pixels:        tt.wantPixels,
						Height:        tile2.Height,
						Width:         tile2.Width,
						AdjacentTiles: tt.want2Adjacent,
					},
				},
			}
			p.FindMatchesForTile(tile1, 0)
			if !reflect.DeepEqual(p, want) {
				t.Errorf("\ngot %+v\nwan %+v", p.Tiles[0].AdjacentTiles, want.Tiles[0].AdjacentTiles)
				t.Errorf("\ngot %+v\nwan %+v", p.Tiles[0].Pixels, want.Tiles[0].Pixels)
				t.Errorf("\ngot %+v\nwan %+v", p.Tiles[1].AdjacentTiles, want.Tiles[1].AdjacentTiles)
				t.Errorf("\ngot %+v\nwan %+v", p.Tiles[1].Pixels, want.Tiles[1].Pixels)
			}
		})
	}
}
